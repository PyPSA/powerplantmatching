[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name="powerplantmatching"
dynamic = ["version"]
description="Toolset for generating and managing Power Plant Data"
readme="README.md"
authors = [{ name = "Fabian Hofmann (FIAS)", email = "fabianmarikhofmann@gmail.com" },
{ name = "Jonas Hoersch (KIT)" },
{ name = "Fabian Gotzens (FZ JÃ¼lich)" }]
license = { file = "LICENSE" }
classifiers=[
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Natural Language :: English",
    "Operating System :: OS Independent",
]

requires-python = ">=3.9"

dependencies = [
    "numpy",
    "scipy",
    "pandas>=0.24.0",
    "networkx>=1.10",
    "pycountry",
    "country_converter",
    "xlrd",
    "seaborn",
    "pyyaml >=5.1.0",
    "requests",
    "matplotlib",
    "geopy",
    "xlrd",
    "unidecode",
    "entsoe-py >=0.3.1",
    "deprecation",
    "tqdm",
    "openpyxl",
]

[project.urls]
Homepage = "https://github.com/PyPSA/powerplantmatching"
Source = "https://github.com/PyPSA/powerplantmatching"

[project.optional-dependencies]
docs= [
    "numpydoc",
    "sphinx",
    "sphinx-book-theme",
    "nbsphinx",
    "sphinx-automodapi",
]
dev= ["pre-commit", "pytest", "pytest-cov"]

 # setuptools_scm settings

[tool.setuptools_scm]
version_scheme = "post-release"

[tool.setuptools.packages.find]
include = ["powerplantmatching"]

# Pytest settings

[tool.pytest.ini_options]
filterwarnings = [
    "error::FutureWarning",      # Raise all FutureWarnings as errors
]

# Formatter and linter settings

[tool.ruff]
extend-include = ['*.ipynb']

[tool.ruff.lint]
select = [
    'F',   # pyflakes
    # 'E',   # pycodestyle: Error
    # 'W',   # pycodestyle: Warning
    'I',   # isort
    # 'D',   # pydocstyle
    'UP',  # pyupgrade
    'TID', # flake8-tidy-imports
    'NPY', # numpy
]

